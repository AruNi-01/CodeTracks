const t=JSON.parse(`{"key":"v-5d99e9ca","path":"/studynotes/design_pattern/mind/oop/%E4%BD%A0%E5%86%99%E7%9A%84%E7%9C%9F%E7%9A%84%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%BB%A3%E7%A0%81%E5%90%97.html","title":"你写的真的是面向对象的代码吗","lang":"zh-CN","frontmatter":{"title":"你写的真的是面向对象的代码吗","order":3,"icon":"write","category":["设计模式"],"tag":["设计原则与思想"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"本文内容 前言 虽然现在大部分人都是使用的面向对象编程的语言来编写代码，但是你觉得这样写出来的代码就是面向对象的吗？ 其实，可能会因为一些无意的操作，导致我们编写出面向过程编程风格的代码。 1. 有哪些代码看似面向对象，实际是面向过程的？ 1.1 滥用 getter、setter 方法","head":[["meta",{"property":"og:url","content":"https://aruni.me/docs/studynotes/design_pattern/mind/oop/%E4%BD%A0%E5%86%99%E7%9A%84%E7%9C%9F%E7%9A%84%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%BB%A3%E7%A0%81%E5%90%97.html"}],["meta",{"property":"og:site_name","content":"AruNi's domain"}],["meta",{"property":"og:title","content":"你写的真的是面向对象的代码吗"}],["meta",{"property":"og:description","content":"本文内容 前言 虽然现在大部分人都是使用的面向对象编程的语言来编写代码，但是你觉得这样写出来的代码就是面向对象的吗？ 其实，可能会因为一些无意的操作，导致我们编写出面向过程编程风格的代码。 1. 有哪些代码看似面向对象，实际是面向过程的？ 1.1 滥用 getter、setter 方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-15T07:56:18.000Z"}],["meta",{"property":"article:author","content":"AruNi_Lu"}],["meta",{"property":"article:tag","content":"设计原则与思想"}],["meta",{"property":"article:modified_time","content":"2023-03-15T07:56:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"你写的真的是面向对象的代码吗\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-15T07:56:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AruNi_Lu\\",\\"url\\":\\"https://github.com/AruNi-01/\\"}]}"]]},"headers":[{"level":2,"title":"1. 有哪些代码看似面向对象，实际是面向过程的？","slug":"_1-有哪些代码看似面向对象-实际是面向过程的","link":"#_1-有哪些代码看似面向对象-实际是面向过程的","children":[{"level":3,"title":"1.1 滥用 getter、setter 方法","slug":"_1-1-滥用-getter、setter-方法","link":"#_1-1-滥用-getter、setter-方法","children":[]},{"level":3,"title":"1.2 滥用全局变量和全局方法","slug":"_1-2-滥用全局变量和全局方法","link":"#_1-2-滥用全局变量和全局方法","children":[]},{"level":3,"title":"1.3 定义数据和方法分离的类","slug":"_1-3-定义数据和方法分离的类","link":"#_1-3-定义数据和方法分离的类","children":[]}]},{"level":2,"title":"2. 为什么这么容易写出面向过程的代码？","slug":"_2-为什么这么容易写出面向过程的代码","link":"#_2-为什么这么容易写出面向过程的代码","children":[]},{"level":2,"title":"3. 总结","slug":"_3-总结","link":"#_3-总结","children":[]}],"git":{"createdTime":1678866978000,"updatedTime":1678866978000,"contributors":[{"name":"AruNi-01","email":"1298911600@qq.com","commits":1}]},"readingTime":{"minutes":9.46,"words":2837},"filePathRelative":"studynotes/design_pattern/mind/oop/你写的真的是面向对象的代码吗.md","localizedDate":"2023年3月15日","excerpt":"<details class=\\"hint-container details\\"><summary>本文内容</summary>\\n\\n</details>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">前言</p>\\n<p>虽然现在大部分人都是使用的面向对象编程的语言来编写代码，但是你觉得这样写出来的代码就是面向对象的吗？</p>\\n<p>其实，可能会因为一些无意的操作，导致我们编写出面向过程编程风格的代码。</p>\\n</div>\\n<h2> 1. 有哪些代码看似面向对象，实际是面向过程的？</h2>\\n<h3> 1.1 滥用 getter、setter 方法</h3>","autoDesc":true}`);export{t as data};
