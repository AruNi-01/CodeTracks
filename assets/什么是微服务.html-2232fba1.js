const e=JSON.parse(`{"key":"v-607e0bf9","path":"/studynotes/microservice/basis/%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1.html","title":"什么是微服务","lang":"zh-CN","frontmatter":{"title":"什么是微服务","date":"2023-06-07T00:00:00.000Z","icon":"write","order":1,"category":["微服务架构"],"tag":["基础"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"本文内容 1. 单体应用 在讲微服务之前，肯定得先从单体应用说起，因为微服务架构的出现旨在优化单体应用的 “痛”，下面就来看看这个单体应用的 “痛” 到底是什么。 我相信大家都是从写单体应用过来的，在写单体应用的时候，各个功能模块，所有的服务都写到一个应用里。如果是一个 web 项目，只需要最后将其打一个 WAR 包，丢到 Tomcat 中，然后就可以对外提供服务了。 使用单体架构开发非常 简单快捷，对于一个简单的系统，也许你一个人就能完成。开发完成后，也 容易部署上线。","head":[["meta",{"property":"og:url","content":"https://aruni.me/docs/studynotes/microservice/basis/%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1.html"}],["meta",{"property":"og:site_name","content":"AruNi's domain"}],["meta",{"property":"og:title","content":"什么是微服务"}],["meta",{"property":"og:description","content":"本文内容 1. 单体应用 在讲微服务之前，肯定得先从单体应用说起，因为微服务架构的出现旨在优化单体应用的 “痛”，下面就来看看这个单体应用的 “痛” 到底是什么。 我相信大家都是从写单体应用过来的，在写单体应用的时候，各个功能模块，所有的服务都写到一个应用里。如果是一个 web 项目，只需要最后将其打一个 WAR 包，丢到 Tomcat 中，然后就可以对外提供服务了。 使用单体架构开发非常 简单快捷，对于一个简单的系统，也许你一个人就能完成。开发完成后，也 容易部署上线。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-11T16:43:41.000Z"}],["meta",{"property":"article:author","content":"AruNi_Lu"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:published_time","content":"2023-06-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-11T16:43:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"什么是微服务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-07T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-11T16:43:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AruNi_Lu\\",\\"url\\":\\"https://github.com/AruNi-01\\"}]}"]]},"headers":[{"level":2,"title":"1. 单体应用","slug":"_1-单体应用","link":"#_1-单体应用","children":[]},{"level":2,"title":"2. 什么是服务化？","slug":"_2-什么是服务化","link":"#_2-什么是服务化","children":[]},{"level":2,"title":"3. 什么是微服务？","slug":"_3-什么是微服务","link":"#_3-什么是微服务","children":[]},{"level":2,"title":"4. 微服务有什么问题？","slug":"_4-微服务有什么问题","link":"#_4-微服务有什么问题","children":[]},{"level":2,"title":"5. 总结","slug":"_5-总结","link":"#_5-总结","children":[]}],"git":{"createdTime":1686501821000,"updatedTime":1686501821000,"contributors":[{"name":"aarynlu","email":"aarynlu@tencent.com","commits":1}]},"readingTime":{"minutes":6.25,"words":1876},"filePathRelative":"studynotes/microservice/basis/什么是微服务.md","localizedDate":"2023年6月7日","excerpt":"<details class=\\"hint-container details\\"><summary>本文内容</summary>\\n\\n</details>\\n<h2> 1. 单体应用</h2>\\n<p>在讲微服务之前，肯定得先从单体应用说起，因为微服务架构的出现旨在优化单体应用的 “痛”，下面就来看看这个单体应用的 “痛” 到底是什么。</p>\\n<p>我相信大家都是从写单体应用过来的，在写单体应用的时候，各个功能模块，所有的服务都写到一个应用里。如果是一个 web 项目，只需要最后将其打一个 WAR 包，丢到 Tomcat 中，然后就可以对外提供服务了。</p>\\n<p>使用单体架构开发非常 <strong>简单快捷</strong>，对于一个简单的系统，也许你一个人就能完成。开发完成后，也 <strong>容易部署上线</strong>。</p>","autoDesc":true}`);export{e as data};
