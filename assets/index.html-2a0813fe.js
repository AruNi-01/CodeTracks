import{_ as i,Y as o,Z as s,a0 as e,a1 as E,a2 as n,$ as r,a3 as a,J as l}from"./framework-4f456140.js";const d={},A=r('<div class="hint-container info"><p class="hint-container-title">相关内容</p><p>手写一个简易的 Spring，主要包括容器、代理等相关的功能。</p><div style="text-align:right;"><p>——项目来源：小傅哥《手写 Spring 渐进式源码实践》</p></div></div><h2 id="容器篇-ioc" tabindex="-1"><a class="header-anchor" href="#容器篇-ioc" aria-hidden="true">#</a> 容器篇：IoC</h2>',2),B=e("h2",{id:"代理篇-aop",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#代理篇-aop","aria-hidden":"true"},"#"),a(" 代理篇：AOP")],-1),c=e("h2",{id:"高级篇-design",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#高级篇-design","aria-hidden":"true"},"#"),a(" 高级篇：Design")],-1);function h(u,_){const t=l("RouterLink");return o(),s("div",null,[A,e("ul",null,[e("li",null,[E(t,{to:"/studynotes/framework/small-spring/ioc/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E7%AE%80%E5%8D%95%E7%9A%84Bean%E5%AE%B9%E5%99%A8.html"},{default:n(()=>[a("第一章：简单的 Bean 容器")]),_:1})]),e("li",null,[E(t,{to:"/studynotes/framework/small-spring/ioc/%E7%AC%AC%E4%BA%8C%E7%AB%A0%EF%BC%9ABean%20%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%81%E6%B3%A8%E5%86%8C%E3%80%81%E8%8E%B7%E5%8F%96.html"},{default:n(()=>[a("第二章：Bean 的定义、注册、获取")]),_:1})]),e("li",null,[E(t,{to:"/studynotes/framework/small-spring/ioc/%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9A%E5%AE%9E%E7%8E%B0%E5%90%AB%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E7%B1%BB%E5%AE%9E%E4%BE%8B%E5%8C%96%E7%AD%96%E7%95%A5.html"},{default:n(()=>[a("第三章：实现含构造函数的类实例化策略")]),_:1})]),e("li",null,[E(t,{to:"/studynotes/framework/small-spring/ioc/%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9A%E6%B3%A8%E5%85%A5%E5%B1%9E%E6%80%A7%E5%92%8C%E4%BE%9D%E8%B5%96%E5%AF%B9%E8%B1%A1.html"},{default:n(()=>[a("第四章：注入属性和依赖对象")]),_:1})])]),B,c])}const p=i(d,[["render",h],["__file","index.html.vue"]]);export{p as default};
