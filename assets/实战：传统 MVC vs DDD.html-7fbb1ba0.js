import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as l,c as i,a as n,d as a,w as p,b as s,e as u}from"./app-8a94eb38.js";const k={},r={class:"hint-container details"},d=n("summary",null,"本文内容",-1),v={class:"table-of-contents"},m={class:"hint-container info"},b=n("p",{class:"hint-container-title"},"前言",-1),y={href:"https://aruni.me/studynotes/design_pattern/mind/oop/%E7%90%86%E8%AE%BA%EF%BC%9A%E4%BC%A0%E7%BB%9F%20MVC%20vs%20DDD.html",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,"下面使用一个简单的虚拟钱包系统，来体会一下这两种开发模式分别是怎样用的，有什么区别。",-1),w=u(`<h2 id="_1-钱包业务背景" tabindex="-1"><a class="header-anchor" href="#_1-钱包业务背景" aria-hidden="true">#</a> 1. 钱包业务背景</h2><p>许多应用都会为每个用户开设一个系统内的虚拟钱包账户，例如微信中的零钱。</p><p>这个虚拟钱包的核心功能支持用户充值、提现、支付、余额查询、交易流水（记录）查询，就像下面这样：</p><blockquote><p>此外，可能还会支持一些冻结、透支等。</p></blockquote><p><img src="https://run-notes.oss-cn-beijing.aliyuncs.com/notes/202303171601472.png" alt="image-20230317160126140" loading="lazy"></p><p>下面先来看看功能的业务实现流程。</p><h2 id="_2-业务实现流程" tabindex="-1"><a class="header-anchor" href="#_2-业务实现流程" aria-hidden="true">#</a> 2. 业务实现流程</h2><h3 id="_2-1-充值" tabindex="-1"><a class="header-anchor" href="#_2-1-充值" aria-hidden="true">#</a> 2.1 充值</h3><p>用户可通过第三方支付渠道，把自己银行卡内的钱充值到虚拟钱包中。</p><p>这个过程可以分解为三个主要的流程：</p><ol><li>从用户的银行账户转账到 APP 的公共银行账户上；</li><li>将用户充值的金额加到虚拟钱包余额上；</li><li>记录这笔交易流水。</li></ol><p><img src="https://run-notes.oss-cn-beijing.aliyuncs.com/notes/202303171608372.png" alt="image-20230317160807552" loading="lazy"></p><h3 id="_2-2-支付" tabindex="-1"><a class="header-anchor" href="#_2-2-支付" aria-hidden="true">#</a> 2.2 支付</h3><p>用户使用钱包内的余额，支付购买 APP 内的商品。其实支付过程就是一个转账过程，即从用户的钱包转钱到商家的钱包中，然后也需要记录这笔交易流水。</p><p><img src="https://run-notes.oss-cn-beijing.aliyuncs.com/notes/202303171610606.png" alt="image-20230317161016824" loading="lazy"></p><h3 id="_2-3-提现" tabindex="-1"><a class="header-anchor" href="#_2-3-提现" aria-hidden="true">#</a> 2.3 提现</h3><p>提现就是充值的逆过程，将用户钱包中的余额提现到自己的银行卡中。即扣减用户钱包中的余额，从 APP 公共银行账户转账到用户的银行账户中，然后记录这笔交易流水。</p><p><img src="https://run-notes.oss-cn-beijing.aliyuncs.com/notes/202303171613408.png" alt="image-20230317161316492" loading="lazy"></p><h3 id="_2-4-查询余额" tabindex="-1"><a class="header-anchor" href="#_2-4-查询余额" aria-hidden="true">#</a> 2.4 查询余额</h3><p>查询余额就是查询用户虚拟钱包中的余额数字即可。</p><h3 id="_2-5-查询交易流水" tabindex="-1"><a class="header-anchor" href="#_2-5-查询交易流水" aria-hidden="true">#</a> 2.5 查询交易流水</h3><p>我们目前只有三种类型的交易流水：充值、支付和提现。</p><p>在查询交易流水时，只需要将之前记录的交易流水按照时间、类型等条件过滤后，显示出来即可。</p><h2 id="_3-设计思路" tabindex="-1"><a class="header-anchor" href="#_3-设计思路" aria-hidden="true">#</a> 3. 设计思路</h2><p>通过刚刚的分析，可以发现在业务流程主要是跟两个系统打交道，一个是虚拟钱包，一个是三方支付（使用银行卡、微信、支付宝充值等）。</p><p>因此，我们先基于此给业务进行划分，给系统解耦，将整个钱包系统拆分为虚拟钱包系统和三方支付系统。</p><p><img src="https://run-notes.oss-cn-beijing.aliyuncs.com/notes/202303171622224.png" alt="image-20230317162215311" loading="lazy"></p><p>下面主要从虚拟钱包系统出发，来看看如何设计与实现。</p><p>如果要支持钱包的这五个核心功能，虚拟钱包系统需要对应实现的操作如下：</p><p><img src="https://run-notes.oss-cn-beijing.aliyuncs.com/notes/202303171624764.png" alt="image-20230317162431929" loading="lazy"></p><p>其中，支付会涉及到两个账户的余额加减操作。而查询交易流水，所涉及到的信息有点多，主要有如下：</p><p><img src="https://run-notes.oss-cn-beijing.aliyuncs.com/notes/202303171626990.png" alt="image-20230317162615123" loading="lazy"></p><p>可以发现，交易流水中包含 <strong>两个钱包账号</strong>，分给是入账钱包账号和出账钱包账号。为什么要有两个呢？主要是为了 <strong>兼容支付功能</strong>，它涉及两个账户的交易。而对于充值和提现则只需要记录一个钱包账户即可。</p><p>到此，整个虚拟钱包系统的设计思路就完成了，下面进入实际开发，来看看如何基于贫血模型的传统开发模式和基于充血模型的 DDD 开发模式，来实现这样一个系统？</p><h2 id="_4-基于贫血模型的传统开发模式" tabindex="-1"><a class="header-anchor" href="#_4-基于贫血模型的传统开发模式" aria-hidden="true">#</a> 4. 基于贫血模型的传统开发模式</h2><p>其实，这就是一个典型的 Web 后端项目。使用 MVC 开发模式的话，只需对应地建立三层结构即可。</p><p>Controller 和 VO 负责暴露接口，主要就是调用 Service 的方法，所以省略了具体的实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VirtualWalletController</span> <span class="token punctuation">{</span>
    <span class="token comment">// 通过构造函数或者 IOC 框架注入</span>
    <span class="token keyword">private</span> <span class="token class-name">VirtualWalletService</span> virtualWalletService<span class="token punctuation">;</span>

    <span class="token comment">// 查询余额</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
    <span class="token comment">// 出账</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">debit</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span> 
    <span class="token comment">// 入账</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">credit</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span> 
    <span class="token comment">// 转账</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Long</span> fromWalletId<span class="token punctuation">,</span> <span class="token class-name">Long</span> toWalletId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span> 
    <span class="token comment">// 省略查询交易流水 transaction 的接口</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Service 和 BO 负责核心业务逻辑的处理，下面的代码省略了一些校验，如钱包是否存在，amount 是否小于 0 等。</p><blockquote><p>Repository 和 Entity 负责数据存取，就是和数据库打交道，这里就不展示了。</p></blockquote><p>交易类型枚举类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Enum</span> <span class="token class-name">TransactionType</span> <span class="token punctuation">{</span>
  <span class="token constant">DEBIT</span><span class="token punctuation">,</span>
  <span class="token constant">CREDIT</span><span class="token punctuation">,</span>
  <span class="token constant">TRANSFER</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>BO：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VirtualWalletBo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> createTime<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> balance<span class="token punctuation">;</span>
    <span class="token comment">// 省略 getter/setter/constructor 方法</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Service：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VirtualWalletService</span> <span class="token punctuation">{</span>
    <span class="token comment">// 通过构造函数或者IOC框架注入</span>
    <span class="token keyword">private</span> <span class="token class-name">VirtualWalletRepository</span> walletRepo<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">VirtualWalletTransactionRepository</span> transactionRepo<span class="token punctuation">;</span>

    <span class="token comment">// 获取虚拟钱包 BO</span>
    <span class="token keyword">public</span> <span class="token class-name">VirtualWalletBo</span> <span class="token function">getVirtualWallet</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VirtualWalletEntity</span> walletEntity <span class="token operator">=</span> walletRepo<span class="token punctuation">.</span><span class="token function">getWalletEntity</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VirtualWalletBo</span> walletBo <span class="token operator">=</span> <span class="token function">convert</span><span class="token punctuation">(</span>walletEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> walletBo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// 查询余额</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> walletRepo<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">debit</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VirtualWalletEntity</span> walletEntity <span class="token operator">=</span> walletRepo<span class="token punctuation">.</span><span class="token function">getWalletEntity</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BigDecimal</span> balance <span class="token operator">=</span> walletEntity<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>balance<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSufficientBalanceException</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 记录交易流水</span>
        <span class="token class-name">VirtualWalletTransactionEntity</span> transactionEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VirtualWalletTransactionEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">TransactionType</span><span class="token punctuation">.</span><span class="token constant">DEBIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setFromWalletId</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionRepo<span class="token punctuation">.</span><span class="token function">saveTransaction</span><span class="token punctuation">(</span>transactionEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        walletRepo<span class="token punctuation">.</span><span class="token function">updateBalance</span><span class="token punctuation">(</span>walletId<span class="token punctuation">,</span> balance<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">credit</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VirtualWalletTransactionEntity</span> transactionEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VirtualWalletTransactionEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">TransactionType</span><span class="token punctuation">.</span><span class="token constant">CREDIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setFromWalletId</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionRepo<span class="token punctuation">.</span><span class="token function">saveTransaction</span><span class="token punctuation">(</span>transactionEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VirtualWalletEntity</span> walletEntity <span class="token operator">=</span> walletRepo<span class="token punctuation">.</span><span class="token function">getWalletEntity</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BigDecimal</span> balance <span class="token operator">=</span> walletEntity<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        walletRepo<span class="token punctuation">.</span><span class="token function">updateBalance</span><span class="token punctuation">(</span>walletId<span class="token punctuation">,</span> balance<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Long</span> fromWalletId<span class="token punctuation">,</span> <span class="token class-name">Long</span> toWalletId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VirtualWalletTransactionEntity</span> transactionEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VirtualWalletTransactionEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">TransactionType</span><span class="token punctuation">.</span><span class="token constant">TRANSFER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setFromWalletId</span><span class="token punctuation">(</span>fromWalletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setToWalletId</span><span class="token punctuation">(</span>toWalletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionRepo<span class="token punctuation">.</span><span class="token function">saveTransaction</span><span class="token punctuation">(</span>transactionEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">debit</span><span class="token punctuation">(</span>fromWalletId<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">credit</span><span class="token punctuation">(</span>toWalletId<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就完成了基本的业务，可以发现 Controller 层的 VO、Service 层的 BO、Repository 层的 Entiry 都是贫血模型，即都是数据与方法相分离（它们中只有数据，对应的逻辑方法在在对应的层中），是典型的面向过程编程的风格。</p><h2 id="_5-基于充血模型的-ddd-开发模式" tabindex="-1"><a class="header-anchor" href="#_5-基于充血模型的-ddd-开发模式" aria-hidden="true">#</a> 5. 基于充血模型的 DDD 开发模式</h2><p>之前讲到了，DDD 开发模式与 MVC 相比，<strong>主要区别就在 Service 层</strong>，所以下面重点来看看 DDD 开发模式的 Service 层如何实现。</p><p>在 DDD 开发模式下， 我们 <strong>把虚拟钱包 VirtualWallet 类设计成一个充血的 Domain 领域模型</strong>，并将原来在 Service 类中的部分业务逻辑移动到 VirtualWallet 类中，<strong>让 Service 类的实现依赖 VirtualWallet 类</strong>。</p><p>VirtualWallet 类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VirtualWallet</span> <span class="token punctuation">{</span> 	<span class="token comment">// Domain 领域模型 (充血模型)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> createTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> balance <span class="token operator">=</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">VirtualWallet</span><span class="token punctuation">(</span><span class="token class-name">Long</span> preAllocatedId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> preAllocatedId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">balance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">debit</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InsufficientBalanceException</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">credit</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>amount<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidAmountException</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VirtualWalletService 类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VirtualWalletService</span> <span class="token punctuation">{</span>
    <span class="token comment">// 通过构造函数或者 IOC 框架注入</span>
    <span class="token keyword">private</span> <span class="token class-name">VirtualWalletRepository</span> walletRepo<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">VirtualWalletTransactionRepository</span> transactionRepo<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">VirtualWallet</span> <span class="token function">getVirtualWallet</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VirtualWalletEntity</span> walletEntity <span class="token operator">=</span> walletRepo<span class="token punctuation">.</span><span class="token function">getWalletEntity</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VirtualWallet</span> wallet <span class="token operator">=</span> <span class="token function">convert</span><span class="token punctuation">(</span>walletEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> wallet<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 查询余额</span>
    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> walletRepo<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">debit</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VirtualWalletEntity</span> walletEntity <span class="token operator">=</span> walletRepo<span class="token punctuation">.</span><span class="token function">getWalletEntity</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VirtualWallet</span> wallet <span class="token operator">=</span> <span class="token function">convert</span><span class="token punctuation">(</span>walletEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        wallet<span class="token punctuation">.</span><span class="token function">debit</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 直接通过 wallet 调用</span>
        <span class="token comment">// 记录交易流水</span>
        <span class="token class-name">VirtualWalletTransactionEntity</span> transactionEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VirtualWalletTransactionEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">TransactionType</span><span class="token punctuation">.</span><span class="token constant">DEBIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setFromWalletId</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionRepo<span class="token punctuation">.</span><span class="token function">saveTransaction</span><span class="token punctuation">(</span>transactionEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        walletRepo<span class="token punctuation">.</span><span class="token function">updateBalance</span><span class="token punctuation">(</span>walletId<span class="token punctuation">,</span> wallet<span class="token punctuation">.</span><span class="token function">balance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">credit</span><span class="token punctuation">(</span><span class="token class-name">Long</span> walletId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">VirtualWalletEntity</span> walletEntity <span class="token operator">=</span> walletRepo<span class="token punctuation">.</span><span class="token function">getWalletEntity</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VirtualWallet</span> wallet <span class="token operator">=</span> <span class="token function">convert</span><span class="token punctuation">(</span>walletEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        wallet<span class="token punctuation">.</span><span class="token function">credit</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">VirtualWalletTransactionEntity</span> transactionEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VirtualWalletTransactionEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">TransactionType</span><span class="token punctuation">.</span><span class="token constant">CREDIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionEntity<span class="token punctuation">.</span><span class="token function">setFromWalletId</span><span class="token punctuation">(</span>walletId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transactionRepo<span class="token punctuation">.</span><span class="token function">saveTransaction</span><span class="token punctuation">(</span>transactionEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        walletRepo<span class="token punctuation">.</span><span class="token function">updateBalance</span><span class="token punctuation">(</span>walletId<span class="token punctuation">,</span> wallet<span class="token punctuation">.</span><span class="token function">balance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Long</span> fromWalletId<span class="token punctuation">,</span> <span class="token class-name">Long</span> toWalletId<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...跟基于贫血模型的传统开发模式的代码一样...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就是基于充血模型的开发模式，主要是 <strong>将 Service 层抽象出一个 Domain 领域模型，负责跟业务逻辑相关的实现，将数据和逻辑方法都放到 Domain 类中</strong>。</p><p>可以看出，现在的领域模型 VirtualWallet 类很单薄，包含的业务逻辑很简单，这相对于原来的贫血模型的设计思路貌似没多大优势。</p><p>确实，这也是大部分业务系统都使用贫血模型开发的原因。但是，<strong>如果虚拟钱包系统需要支持更加复杂的业务逻辑，那充血模型的优势就能显现出来了</strong>。比如，要支持透支一定额度和冻结部分余额的功能。这时候，我们重新来看一下 VirtualWallet 类的实现代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VirtualWallet</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> createTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> balance <span class="token operator">=</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isAllowedOverdraft <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>	<span class="token comment">// 是否允许透支</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> overdraftAmount <span class="token operator">=</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">;</span>	<span class="token comment">// 透支金额</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> frozenAmount <span class="token operator">=</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">;</span>	<span class="token comment">// 冻结金额</span>

    <span class="token keyword">public</span> <span class="token class-name">VirtualWallet</span><span class="token punctuation">(</span><span class="token class-name">Long</span> preAllocatedId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> preAllocatedId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 冻结/解冻、增/减透支金额、开/关透支</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">freeze</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unfreeze</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">increaseOverdraftAmount</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">decreaseOverdraftAmount</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">closeOverdraft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">openOverdraft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">balance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">BigDecimal</span> <span class="token function">getAvaliableBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BigDecimal</span> totalAvaliableBalance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>frozenAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isAllowedOverdraft<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            totalAvaliableBalance <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>overdraftAmount<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> totalAvaliableBalance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">debit</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BigDecimal</span> totalAvaliableBalance <span class="token operator">=</span> <span class="token function">getAvaliableBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>totoalAvaliableBalance<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InsufficientBalanceException</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">credit</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>amount<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token constant">ZERO</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InvalidAmountException</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>balance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>balance<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，<strong>Domain 类中的业务逻辑就丰富了起来</strong>，后续在其他地方，都能 <strong>复用</strong> 这个类的业务逻辑。</p><h2 id="_6-思考题" tabindex="-1"><a class="header-anchor" href="#_6-思考题" aria-hidden="true">#</a> 6. 思考题</h2><div class="hint-container tip"><p class="hint-container-title">在基于充血模型的 DDD 开发模式中，将业务逻辑移动到 Domain 中，Service 类变得很单薄，但为什么没有完全将 Service 类删掉？</p></div><p>这时候不妨从另一个角度来回答这个问题，Service 类在这种情况下担当的职责是什么？哪些功能逻辑会放到 Service 类中？</p><p>区别于 Domain 的职责，Service 类主要有下面几个职责：</p><ul><li><p><strong>Service 类负责和 Repository 交流</strong>。在上面的代码实现中，VirtualWalletService 类负责从 Repository 层中获取数据库中的数据，然后转换成领域模型 VirtualWallet，然后 <strong>由领域模型 VirtualWallet 来完成业务逻辑</strong>，最后再通过 Repository 层将数据存回数据库；</p><blockquote><p>可以想一下，为什么不直接让领域模型 VirtualWallet 与 Repository 打交道？因为我们想 <strong>保持领域模型的独立性</strong>，不与任何其他层（Repository 层）的代码或开发框架（Spring、MyBatis）耦合在一起，<strong>将流程性的代码逻辑（如从 DB 中获取数据、映射数据）与领域模型的业务逻辑解耦</strong>，从而让 <strong>领域模型更加可复用</strong>。</p></blockquote></li><li><p><strong>Service 类负责跨领域模型的业务聚合功能</strong>。VirtualWalletService 类中的 <code>tansfer()</code> 转账函数会 <strong>涉及到两个钱包的操作</strong>，因此这部分逻辑无法放到 VirtualWallet 中，所以暂且放到 VirtualWalletService 类中。当然，随着 <strong>转账业务变得复杂后</strong>，也可以将转账业务抽取出来，设计成一个 <strong>独立的领域模型</strong>；</p></li><li><p><strong>Service 类负责一些非功能性及三方系统交互的工作</strong>。比如幂等、事务、发邮件、发信息、记录日志、调用其他系统的 RPC 接口等，都可以放到 Service 类中。</p></li></ul><div class="hint-container tip"><p class="hint-container-title">在基于充血模型的 DDD 开发模式中，只是将 Service 层改造成了充血模型，是否有必要将 Controller 层和 Repository 层也进行充血领域建模呢？</p></div><p>答案是 <strong>没有必要</strong>。Controller 层主要负责暴露接口，Repository 层主要负责和数据库打交道，在我们实际编码中也发生，<strong>这两层的业务逻辑并不多</strong>，所以即便设计成充血模型，<strong>类也非常单薄</strong>，看起来很奇怪。</p><p>虽然这是一种面向过程的编程风格，但我们只要控制好可能出现的副作用，一样可以开发出优秀的软件。那这里的 <strong>副作用怎么控制呢</strong>？</p><p>从 Repository 层的 <strong>Entity</strong> 来说，即使它被设计成了贫血模型，违反了封装特性，有被任意代码修改数据的风险。<strong>但 Entity 的声明周期是有限的，我们把它传递到 Service 层后，就会转化为 BO 或 Domain</strong>，再继续处理后续的业务逻辑。Entity 的声明周期到此就结束了，所以并不会被到处修改。</p><p>再从 Controller 层的 <strong>VO</strong> 来说，VO 其实是一种 DTO（Data Transfer Object，数据传输对象）。它主要 <strong>作为接口的数据传输层载体，将数据发给其他系统</strong>。从功能上来说，<strong>它理应不包含业务逻辑、只包含数据</strong>，所以设计成贫血模型也是较为合理的。</p><h2 id="_7-总结" tabindex="-1"><a class="header-anchor" href="#_7-总结" aria-hidden="true">#</a> 7. 总结</h2><p>基于充血的 DDD 开发模式与基于贫血模型的传统开发模式相比，主要区别就在 <strong>Service 层</strong>，我们把原来在 Service 类中的业务逻辑移动到了 Domain 领域模型中，<strong>让 Service 类的实现依赖于 Domain 类</strong>。</p><p><strong>Domain 类主要负责与真正的业务逻辑相关的实现</strong>，而不与其他层（Repository 层）打交道、也不与具体使用的框架（Spring、MyBatis）耦合。<strong>它就单单只负责与该领域相关的业务逻辑，大大地提高了内聚度，让代码复用性更高</strong>。</p><p>而并 <strong>不会将 Service 层完全删掉</strong>，主要是需要 <strong>负责一些不适合放在 Domain 类中的功能</strong>，例如与 Repository 层打交道、跨领域模型的业务聚合、幂等事务等非功能性的工作。</p><p>而 Repository 层的 <strong>Entity</strong> 和 Controller 层的 <strong>VO</strong> <strong>不设计成充血模型</strong>，主要是因为 <strong>Entity 的声明周期有限、VO 只是单纯作为一种 DTO，是数据传输的载体</strong>，所以继续使用贫血模型也是没有问题的。所以，<strong>充血模型是业务的精确抽象</strong>。在该抽象的地方用充血模型来处理，在不需要抽象如只需要数据传递的地方用贫血模型来处理。</p>`,74);function f(h,E){const t=e("router-link"),o=e("ExternalLinkIcon");return l(),i("div",null,[n("details",r,[d,n("nav",v,[n("ul",null,[n("li",null,[a(t,{to:"#_1-钱包业务背景"},{default:p(()=>[s("1. 钱包业务背景")]),_:1})]),n("li",null,[a(t,{to:"#_2-业务实现流程"},{default:p(()=>[s("2. 业务实现流程")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_2-1-充值"},{default:p(()=>[s("2.1 充值")]),_:1})]),n("li",null,[a(t,{to:"#_2-2-支付"},{default:p(()=>[s("2.2 支付")]),_:1})]),n("li",null,[a(t,{to:"#_2-3-提现"},{default:p(()=>[s("2.3 提现")]),_:1})]),n("li",null,[a(t,{to:"#_2-4-查询余额"},{default:p(()=>[s("2.4 查询余额")]),_:1})]),n("li",null,[a(t,{to:"#_2-5-查询交易流水"},{default:p(()=>[s("2.5 查询交易流水")]),_:1})])])]),n("li",null,[a(t,{to:"#_3-设计思路"},{default:p(()=>[s("3. 设计思路")]),_:1})]),n("li",null,[a(t,{to:"#_4-基于贫血模型的传统开发模式"},{default:p(()=>[s("4. 基于贫血模型的传统开发模式")]),_:1})]),n("li",null,[a(t,{to:"#_5-基于充血模型的-ddd-开发模式"},{default:p(()=>[s("5. 基于充血模型的 DDD 开发模式")]),_:1})]),n("li",null,[a(t,{to:"#_6-思考题"},{default:p(()=>[s("6. 思考题")]),_:1})]),n("li",null,[a(t,{to:"#_7-总结"},{default:p(()=>[s("7. 总结")]),_:1})])])])]),n("div",m,[b,n("p",null,[n("a",y,[s("上一篇文章"),a(o)]),s(" 我们从理论的角度讲解了基于贫血模型的传统开发模式和基于充血的 DDD 开发模式。")]),g]),w])}const B=c(k,[["render",f],["__file","实战：传统 MVC vs DDD.html.vue"]]);export{B as default};
