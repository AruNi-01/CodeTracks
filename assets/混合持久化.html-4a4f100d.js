const e=JSON.parse('{"key":"v-10e3f422","path":"/backend/database/redis/durability/%E6%B7%B7%E5%90%88%E6%8C%81%E4%B9%85%E5%8C%96.html","title":"混合持久化","lang":"zh-CN","frontmatter":{"title":"混合持久化","date":"2024-01-02T00:00:00.000Z","order":3,"category":["数据库"],"tag":["Redis"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"本文内容 1. 为什么需要混合持久化？ 上一篇文章中说到，RDB 快照的最大优势是恢复速度快，但快照的频率不好控制；AOF 快照的最大优势是丢失数据少，但恢复速度较慢。 Redis 4.0 中提出的 混合持久化 既能利用 RDB 的快速恢复优势，又能以较小的开销做到尽量少丢数据。 下面就来看看混合持久化到底是什么，是如何做到的上面效果的。","head":[["meta",{"property":"og:url","content":"https://code.0x3f4.run/backend/database/redis/durability/%E6%B7%B7%E5%90%88%E6%8C%81%E4%B9%85%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"AruNi"}],["meta",{"property":"og:title","content":"混合持久化"}],["meta",{"property":"og:description","content":"本文内容 1. 为什么需要混合持久化？ 上一篇文章中说到，RDB 快照的最大优势是恢复速度快，但快照的频率不好控制；AOF 快照的最大优势是丢失数据少，但恢复速度较慢。 Redis 4.0 中提出的 混合持久化 既能利用 RDB 的快速恢复优势，又能以较小的开销做到尽量少丢数据。 下面就来看看混合持久化到底是什么，是如何做到的上面效果的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-02T13:45:35.000Z"}],["meta",{"property":"article:author","content":"AruNi_Lu"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2024-01-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-02T13:45:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"混合持久化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-02T13:45:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AruNi_Lu\\",\\"url\\":\\"https://github.com/AruNi-01\\"}]}"]]},"headers":[{"level":2,"title":"1. 为什么需要混合持久化？","slug":"_1-为什么需要混合持久化","link":"#_1-为什么需要混合持久化","children":[]},{"level":2,"title":"2. 什么是混合持久化？","slug":"_2-什么是混合持久化","link":"#_2-什么是混合持久化","children":[]}],"git":{"createdTime":1704203135000,"updatedTime":1704203135000,"contributors":[{"name":"AarynLu","email":"hello@0x3f4.run","commits":1}]},"readingTime":{"minutes":1.84,"words":551},"filePathRelative":"backend/database/redis/durability/混合持久化.md","localizedDate":"2024年1月2日","excerpt":"<details class=\\"hint-container details\\"><summary>本文内容</summary>\\n\\n</details>\\n<h2> 1. 为什么需要混合持久化？</h2>\\n<p>上一篇文章中说到，<strong>RDB 快照的最大优势是恢复速度快，但快照的频率不好控制；AOF 快照的最大优势是丢失数据少，但恢复速度较慢</strong>。</p>\\n<p>Redis 4.0 中提出的 <strong>混合持久化</strong> 既能利用 RDB 的快速恢复优势，又能以较小的开销做到尽量少丢数据。</p>\\n<p>下面就来看看混合持久化到底是什么，是如何做到的上面效果的。</p>","autoDesc":true}');export{e as data};
