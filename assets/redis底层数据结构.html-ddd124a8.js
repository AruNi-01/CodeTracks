const e=JSON.parse('{"key":"v-639ca7d2","path":"/backend/database/redis/data_structure/redis%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html","title":"Redis 底层数据结构","lang":"zh-CN","frontmatter":{"title":"Redis 底层数据结构","date":"2023-12-23T00:00:00.000Z","order":1,"category":["数据库"],"tag":["Redis"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"本文内容 前言 Redis 之所以快，除了它是基于内存的数据库外，还有一个重要的因素，就是它底层的 数据结构。 所以，想知道 Redis 为什么快的秘诀之一，就是去探究探究它底层的数据结构。 &gt; 前置知识：redisObject","head":[["meta",{"property":"og:url","content":"https://code.0x3f4.run/backend/database/redis/data_structure/redis%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"AruNi"}],["meta",{"property":"og:title","content":"Redis 底层数据结构"}],["meta",{"property":"og:description","content":"本文内容 前言 Redis 之所以快，除了它是基于内存的数据库外，还有一个重要的因素，就是它底层的 数据结构。 所以，想知道 Redis 为什么快的秘诀之一，就是去探究探究它底层的数据结构。 &gt; 前置知识：redisObject"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-24T05:52:50.000Z"}],["meta",{"property":"article:author","content":"AruNi_Lu"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2023-12-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-24T05:52:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 底层数据结构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-24T05:52:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AruNi_Lu\\",\\"url\\":\\"https://github.com/AruNi-01\\"}]}"]]},"headers":[{"level":2,"title":"> 前置知识：redisObject","slug":"前置知识-redisobject","link":"#前置知识-redisobject","children":[]},{"level":2,"title":"1. Redis 数据结构有哪些","slug":"_1-redis-数据结构有哪些","link":"#_1-redis-数据结构有哪些","children":[]},{"level":2,"title":"2. 简单动态字符串 SDS","slug":"_2-简单动态字符串-sds","link":"#_2-简单动态字符串-sds","children":[{"level":3,"title":"2.1 SDS 结构","slug":"_2-1-sds-结构","link":"#_2-1-sds-结构","children":[]},{"level":3,"title":"2.2 内存对齐优化","slug":"_2-2-内存对齐优化","link":"#_2-2-内存对齐优化","children":[]}]},{"level":2,"title":"3. 双向链表","slug":"_3-双向链表","link":"#_3-双向链表","children":[]},{"level":2,"title":"4. 压缩列表","slug":"_4-压缩列表","link":"#_4-压缩列表","children":[{"level":3,"title":"4.1 压缩列表结构","slug":"_4-1-压缩列表结构","link":"#_4-1-压缩列表结构","children":[]},{"level":3,"title":"4.2 压缩列表缺陷","slug":"_4-2-压缩列表缺陷","link":"#_4-2-压缩列表缺陷","children":[]}]},{"level":2,"title":"5. 哈希表","slug":"_5-哈希表","link":"#_5-哈希表","children":[]},{"level":2,"title":"6. 整数集合","slug":"_6-整数集合","link":"#_6-整数集合","children":[]},{"level":2,"title":"7. 跳表","slug":"_7-跳表","link":"#_7-跳表","children":[{"level":3,"title":"7.1 如何维持上下相邻层的结点数之比为 1:2","slug":"_7-1-如何维持上下相邻层的结点数之比为-1-2","link":"#_7-1-如何维持上下相邻层的结点数之比为-1-2","children":[]},{"level":3,"title":"7.2 跳表的插入过程","slug":"_7-2-跳表的插入过程","link":"#_7-2-跳表的插入过程","children":[]},{"level":3,"title":"7.3 跳表的查询过程","slug":"_7-3-跳表的查询过程","link":"#_7-3-跳表的查询过程","children":[]}]},{"level":2,"title":"8. quicklist","slug":"_8-quicklist","link":"#_8-quicklist","children":[]},{"level":2,"title":"9. listpack","slug":"_9-listpack","link":"#_9-listpack","children":[]},{"level":2,"title":"10. 总结","slug":"_10-总结","link":"#_10-总结","children":[]},{"level":2,"title":"11. 参考文章","slug":"_11-参考文章","link":"#_11-参考文章","children":[]}],"git":{"createdTime":1703397170000,"updatedTime":1703397170000,"contributors":[{"name":"AarynLu","email":"hello@0x3f4.run","commits":1}]},"readingTime":{"minutes":27.08,"words":8123},"filePathRelative":"backend/database/redis/data_structure/redis底层数据结构.md","localizedDate":"2023年12月23日","excerpt":"<details class=\\"hint-container details\\"><summary>本文内容</summary>\\n\\n</details>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">前言</p>\\n<p>Redis 之所以快，除了它是基于内存的数据库外，还有一个重要的因素，就是它底层的 <strong>数据结构</strong>。</p>\\n<p>所以，想知道 Redis 为什么快的秘诀之一，就是去探究探究它底层的数据结构。</p>\\n</div>\\n<h2> &gt; 前置知识：redisObject</h2>","autoDesc":true}');export{e as data};
