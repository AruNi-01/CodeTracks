const e=JSON.parse(`{"key":"v-0a65c39e","path":"/studynotes/java/collection/HashMap%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html","title":"HashMap 源码分析：数据结构","lang":"zh-CN","frontmatter":{"title":"HashMap 源码分析：数据结构","date":"2023-2-10","order":3,"icon":"write","category":["Java"],"tag":["集合"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"本文内容 本文来源 bugstack，加上了自己的理解！ 1. 介绍 HashMap 最早出现在 JDK 1.2 中，主要用于存放键值对（key-value），底层基于散列算法实现，是 线程不安全的。","head":[["meta",{"property":"og:url","content":"https://aruni.me/docs/studynotes/java/collection/HashMap%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"AruNi's domain"}],["meta",{"property":"og:title","content":"HashMap 源码分析：数据结构"}],["meta",{"property":"og:description","content":"本文内容 本文来源 bugstack，加上了自己的理解！ 1. 介绍 HashMap 最早出现在 JDK 1.2 中，主要用于存放键值对（key-value），底层基于散列算法实现，是 线程不安全的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-15T06:28:03.000Z"}],["meta",{"property":"article:tag","content":"集合"}],["meta",{"property":"article:published_time","content":"2023-02-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-15T06:28:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HashMap 源码分析：数据结构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-15T06:28:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 介绍","slug":"_1-介绍","link":"#_1-介绍","children":[]},{"level":2,"title":"2. 最简单的 HashMap","slug":"_2-最简单的-hashmap","link":"#_2-最简单的-hashmap","children":[]},{"level":2,"title":"3. 扰动函数","slug":"_3-扰动函数","link":"#_3-扰动函数","children":[{"level":3,"title":"3.1 为什么使用扰动函数","slug":"_3-1-为什么使用扰动函数","link":"#_3-1-为什么使用扰动函数","children":[]},{"level":3,"title":"3.2 实验验证扰动函数","slug":"_3-2-实验验证扰动函数","link":"#_3-2-实验验证扰动函数","children":[]}]},{"level":2,"title":"4. 初始化容量和负载因子","slug":"_4-初始化容量和负载因子","link":"#_4-初始化容量和负载因子","children":[{"level":3,"title":"4.1 (n - 1) & hash 的设计","slug":"_4-1-n-1-hash-的设计","link":"#_4-1-n-1-hash-的设计","children":[]},{"level":3,"title":"4.2 初始化容量","slug":"_4-2-初始化容量","link":"#_4-2-初始化容量","children":[]},{"level":3,"title":"4.3 负载因子","slug":"_4-3-负载因子","link":"#_4-3-负载因子","children":[]}]},{"level":2,"title":"5. 扩容元素拆分","slug":"_5-扩容元素拆分","link":"#_5-扩容元素拆分","children":[{"level":3,"title":"5.1 如何做到不重新计算哈希值?","slug":"_5-1-如何做到不重新计算哈希值","link":"#_5-1-如何做到不重新计算哈希值","children":[]},{"level":3,"title":"5.2 hash & oldCap 的设计","slug":"_5-2-hash-oldcap-的设计","link":"#_5-2-hash-oldcap-的设计","children":[]}]}],"git":{"createdTime":1676215463000,"updatedTime":1676442483000,"contributors":[{"name":"AruNi-01","email":"1298911600@qq.com","commits":2}]},"readingTime":{"minutes":15.2,"words":4561},"filePathRelative":"studynotes/java/collection/HashMap源码分析：数据结构.md","localizedDate":"2023年2月10日","excerpt":"<details class=\\"hint-container details\\"><summary>本文内容</summary>\\n\\n</details>\\n<blockquote>\\n<p>本文来源 <a href=\\"https://bugstack.cn/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">bugstack</a>，加上了自己的理解！</p>\\n</blockquote>\\n<h2> <strong>1. 介绍</strong></h2>\\n<p>HashMap 最早出现在 JDK 1.2 中，主要用于存放键值对（key-value），底层基于散列算法实现，是 <strong>线程不安全的</strong>。</p>","autoDesc":true}`);export{e as data};
