const t=JSON.parse('{"key":"v-a5ced0fc","path":"/studynotes/design_pattern/pattern/behaviour_type/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%8A%EF%BC%89%EF%BC%9A%E7%90%86%E8%A7%A3%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F.html","title":"模板模式（上）：理解模板模式","lang":"zh-CN","frontmatter":{"title":"模板模式（上）：理解模板模式","shortTitle":"模板模式（上）","date":"2023-07-10T00:00:00.000Z","order":3,"icon":"write","category":["设计模式"],"tag":["设计模式与范式"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"本文内容 前言 本章来讲解另一个比较常用的行为型设计模式 — 模板模式，该模式主要用来解决 复用和扩展 两个问题。 1. 模板模式原理与实现 1.1 原理 模板模式，全称是模板方法模式（Template Method Design Pattern），GoF 是如下定义的：","head":[["meta",{"property":"og:url","content":"https://aruni.me/studynotes/design_pattern/pattern/behaviour_type/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%8A%EF%BC%89%EF%BC%9A%E7%90%86%E8%A7%A3%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"AruNi"}],["meta",{"property":"og:title","content":"模板模式（上）：理解模板模式"}],["meta",{"property":"og:description","content":"本文内容 前言 本章来讲解另一个比较常用的行为型设计模式 — 模板模式，该模式主要用来解决 复用和扩展 两个问题。 1. 模板模式原理与实现 1.1 原理 模板模式，全称是模板方法模式（Template Method Design Pattern），GoF 是如下定义的："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-16T07:13:47.000Z"}],["meta",{"property":"article:author","content":"AruNi_Lu"}],["meta",{"property":"article:tag","content":"设计模式与范式"}],["meta",{"property":"article:published_time","content":"2023-07-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-16T07:13:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模板模式（上）：理解模板模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-10T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-16T07:13:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AruNi_Lu\\",\\"url\\":\\"https://github.com/AruNi-01\\"}]}"]]},"headers":[{"level":2,"title":"1. 模板模式原理与实现","slug":"_1-模板模式原理与实现","link":"#_1-模板模式原理与实现","children":[{"level":3,"title":"1.1 原理","slug":"_1-1-原理","link":"#_1-1-原理","children":[]},{"level":3,"title":"1.2 实现","slug":"_1-2-实现","link":"#_1-2-实现","children":[]}]},{"level":2,"title":"2. 模板模式作用一：复用","slug":"_2-模板模式作用一-复用","link":"#_2-模板模式作用一-复用","children":[{"level":3,"title":"2.1 Java InputStream","slug":"_2-1-java-inputstream","link":"#_2-1-java-inputstream","children":[]},{"level":3,"title":"2.2 Java AbstractList","slug":"_2-2-java-abstractlist","link":"#_2-2-java-abstractlist","children":[]}]},{"level":2,"title":"3. 模板模式作用二：扩展","slug":"_3-模板模式作用二-扩展","link":"#_3-模板模式作用二-扩展","children":[{"level":3,"title":"3.1 Java Servlet","slug":"_3-1-java-servlet","link":"#_3-1-java-servlet","children":[]},{"level":3,"title":"2.2 JUnit TestCase","slug":"_2-2-junit-testcase","link":"#_2-2-junit-testcase","children":[]}]},{"level":2,"title":"4. 总结","slug":"_4-总结","link":"#_4-总结","children":[]}],"git":{"createdTime":1689002697000,"updatedTime":1689491627000,"contributors":[{"name":"aarynlu","email":"aarynlu@tencent.com","commits":2}]},"readingTime":{"minutes":7.28,"words":2185},"filePathRelative":"studynotes/design_pattern/pattern/behaviour_type/模板模式（上）：理解模板模式.md","localizedDate":"2023年7月10日","excerpt":"<details class=\\"hint-container details\\"><summary>本文内容</summary>\\n\\n</details>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">前言</p>\\n<p>本章来讲解另一个比较常用的行为型设计模式 — <strong>模板模式</strong>，该模式主要用来解决 <strong>复用和扩展</strong> 两个问题。</p>\\n</div>\\n<h2> 1. 模板模式原理与实现</h2>\\n<h3> 1.1 原理</h3>\\n<p>模板模式，全称是模板方法模式（Template Method Design Pattern），GoF 是如下定义的：</p>","autoDesc":true}');export{t as data};
