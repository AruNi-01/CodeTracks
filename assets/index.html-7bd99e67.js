import{_ as o,Y as k,Z as b,a0 as s,a3 as t,a1 as e,a2 as l,$ as c,J as i}from"./framework-4f456140.js";const n={},m={class:"hint-container info"},h=s("p",{class:"hint-container-title"},"相关内容",-1),r={href:"https://github.com/AruNi-01/small-spring",target:"_blank",rel:"noopener noreferrer"},E=s("div",{style:{"text-align":"right"}},[s("p",null,"——项目来源：小傅哥《手写 Spring 渐进式源码实践》")],-1),_=s("h2",{id:"容器篇-ioc",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#容器篇-ioc","aria-hidden":"true"},"#"),t(" 容器篇：IoC")],-1),p={class:"task-list-container"},f={class:"task-list-item"},A=s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-0",checked:"checked",disabled:"disabled"},null,-1),u={class:"task-list-item-label",for:"task-item-0"},x={class:"task-list-item"},B=s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-1",checked:"checked",disabled:"disabled"},null,-1),y={class:"task-list-item-label",for:"task-item-1"},C={class:"task-list-item"},g=s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-2",checked:"checked",disabled:"disabled"},null,-1),D={class:"task-list-item-label",for:"task-item-2"},F={class:"task-list-item"},w=s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-3",checked:"checked",disabled:"disabled"},null,-1),v={class:"task-list-item-label",for:"task-item-3"},N={class:"task-list-item"},O=s("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-4",checked:"checked",disabled:"disabled"},null,-1),L={class:"task-list-item-label",for:"task-item-4"},R=c('<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"><a href="">第06章：实现应用上下文</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"><a href="">第07章：初始化和销毁方法</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"><a href="">第08章：Aware 感知容器对象</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" disabled="disabled"><label class="task-list-item-label" for="task-item-8"><a href="">第09章：对象作用域和 FactoryBean</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" disabled="disabled"><label class="task-list-item-label" for="task-item-9"><a href="">第10章：容器事件和事件监听器</a></label></li>',5),S=c('<h2 id="代理篇-aop" tabindex="-1"><a class="header-anchor" href="#代理篇-aop" aria-hidden="true">#</a> 代理篇：AOP</h2><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" disabled="disabled"><label class="task-list-item-label" for="task-item-10"><a href="">第11章：基于 JDK、Cglib 实现 AOP 切面</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" disabled="disabled"><label class="task-list-item-label" for="task-item-11"><a href="">第12章：把 AOP 融入 Bean 的生命周期</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"><a href="">第13章：自动扫描注册 Bean 对象</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" disabled="disabled"><label class="task-list-item-label" for="task-item-13"><a href="">第14章：通过注解注入属性信息</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" disabled="disabled"><label class="task-list-item-label" for="task-item-14"><a href="">第15章：给代理对象设置属性注入</a></label></li></ul><h2 id="高级篇-design" tabindex="-1"><a class="header-anchor" href="#高级篇-design" aria-hidden="true">#</a> 高级篇：Design</h2><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" disabled="disabled"><label class="task-list-item-label" for="task-item-15"><a href="">第16章：通过三级缓存解决循环依赖</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-16" disabled="disabled"><label class="task-list-item-label" for="task-item-16"><a href="">第17章：数据类型转换</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" disabled="disabled"><label class="task-list-item-label" for="task-item-17"><a href="">第18章：JDBC 功能整合</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" disabled="disabled"><label class="task-list-item-label" for="task-item-18"><a href="">第19章：事务处理</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-19" disabled="disabled"><label class="task-list-item-label" for="task-item-19"><a href="">第20章：ORM 框架实现</a></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" disabled="disabled"><label class="task-list-item-label" for="task-item-20"><a href="">第21章：将 ORM 框架整合到 Spring Bean 容器中</a></label></li></ul>',4);function V(I,J){const d=i("ExternalLinkIcon"),a=i("RouterLink");return k(),b("div",null,[s("div",m,[h,s("p",null,[t("手写一个简易的 Spring，主要包括容器、代理等相关的功能。项目地址："),s("a",r,[t("small-spring"),e(d)])]),E]),_,s("ul",p,[s("li",f,[A,s("label",u,[e(a,{to:"/studynotes/framework/small-spring/ioc/%E7%AC%AC01%E7%AB%A0%EF%BC%9A%E7%AE%80%E5%8D%95%E7%9A%84Bean%E5%AE%B9%E5%99%A8.html"},{default:l(()=>[t("第01章：简单的 Bean 容器")]),_:1})])]),s("li",x,[B,s("label",y,[e(a,{to:"/studynotes/framework/small-spring/ioc/%E7%AC%AC02%E7%AB%A0%EF%BC%9ABean%20%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%81%E6%B3%A8%E5%86%8C%E3%80%81%E8%8E%B7%E5%8F%96.html"},{default:l(()=>[t("第02章：Bean 的定义、注册、获取")]),_:1})])]),s("li",C,[g,s("label",D,[e(a,{to:"/studynotes/framework/small-spring/ioc/%E7%AC%AC03%E7%AB%A0%EF%BC%9A%E5%AE%9E%E7%8E%B0%E5%90%AB%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E7%B1%BB%E5%AE%9E%E4%BE%8B%E5%8C%96%E7%AD%96%E7%95%A5.html"},{default:l(()=>[t("第03章：实现含构造函数的类实例化策略")]),_:1})])]),s("li",F,[w,s("label",v,[e(a,{to:"/studynotes/framework/small-spring/ioc/%E7%AC%AC04%E7%AB%A0%EF%BC%9A%E6%B3%A8%E5%85%A5%E5%B1%9E%E6%80%A7%E5%92%8C%E4%BE%9D%E8%B5%96%E5%AF%B9%E8%B1%A1.html"},{default:l(()=>[t("第04章：注入属性和依赖对象")]),_:1})])]),s("li",N,[O,s("label",L,[e(a,{to:"/studynotes/framework/small-spring/ioc/%E7%AC%AC05%E7%AB%A0%EF%BC%9A%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD%E5%99%A8%E8%A7%A3%E6%9E%90%E6%96%87%E4%BB%B6%E6%B3%A8%E5%86%8C%E5%AF%B9%E8%B1%A1.html"},{default:l(()=>[t("第05章：资源加载器解析文件注册对象")]),_:1})])]),R]),S])}const M=o(n,[["render",V],["__file","index.html.vue"]]);export{M as default};
