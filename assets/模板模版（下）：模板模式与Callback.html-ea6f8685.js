const t=JSON.parse('{"key":"v-879adc02","path":"/studynotes/design_pattern/pattern/behaviour_type/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E7%89%88%EF%BC%88%E4%B8%8B%EF%BC%89%EF%BC%9A%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F%E4%B8%8ECallback.html","title":"模板模式（下）：模板模式与 Callback","lang":"zh-CN","frontmatter":{"title":"模板模式（下）：模板模式与 Callback","shortTitle":"模板模式（下）","date":"2023-07-16T00:00:00.000Z","order":4,"category":["设计模式"],"tag":["设计模式与范式"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"本文内容 前言 在 上一章 中，讲解了模板模式的原理和应用，其主要功能就是 提高代码的复用性、基于扩展点可以在不改变源码的情况下方便的扩展功能。 而我们常用的 Callback 回调技术，也能起到模板模式的两大作用，那他们有什么区别呢？","head":[["meta",{"property":"og:url","content":"https://aruni.me/studynotes/design_pattern/pattern/behaviour_type/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E7%89%88%EF%BC%88%E4%B8%8B%EF%BC%89%EF%BC%9A%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F%E4%B8%8ECallback.html"}],["meta",{"property":"og:site_name","content":"AruNi"}],["meta",{"property":"og:title","content":"模板模式（下）：模板模式与 Callback"}],["meta",{"property":"og:description","content":"本文内容 前言 在 上一章 中，讲解了模板模式的原理和应用，其主要功能就是 提高代码的复用性、基于扩展点可以在不改变源码的情况下方便的扩展功能。 而我们常用的 Callback 回调技术，也能起到模板模式的两大作用，那他们有什么区别呢？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-16T10:04:08.000Z"}],["meta",{"property":"article:author","content":"AruNi_Lu"}],["meta",{"property":"article:tag","content":"设计模式与范式"}],["meta",{"property":"article:published_time","content":"2023-07-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-16T10:04:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模板模式（下）：模板模式与 Callback\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-16T10:04:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AruNi_Lu\\",\\"url\\":\\"https://github.com/AruNi-01\\"}]}"]]},"headers":[{"level":2,"title":"1. 什么是回调？","slug":"_1-什么是回调","link":"#_1-什么是回调","children":[]},{"level":2,"title":"2. 模板模式 vs 回调","slug":"_2-模板模式-vs-回调","link":"#_2-模板模式-vs-回调","children":[]}],"git":{"createdTime":1689491627000,"updatedTime":1694858648000,"contributors":[{"name":"aarynlu","email":"aarynlu@tencent.com","commits":2}]},"readingTime":{"minutes":6.15,"words":1844},"filePathRelative":"studynotes/design_pattern/pattern/behaviour_type/模板模版（下）：模板模式与Callback.md","localizedDate":"2023年7月16日","excerpt":"<details class=\\"hint-container details\\"><summary>本文内容</summary>\\n\\n</details>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">前言</p>\\n<p>在 <a href=\\"https://aruni.me/studynotes/design_pattern/pattern/behaviour_type/%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%8A%EF%BC%89%EF%BC%9A%E7%90%86%E8%A7%A3%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">上一章</a> 中，讲解了模板模式的原理和应用，其主要功能就是 <strong>提高代码的复用性、基于扩展点可以在不改变源码的情况下方便的扩展功能</strong>。</p>\\n<p>而我们常用的 Callback 回调技术，也能起到模板模式的两大作用，那他们有什么区别呢？</p>\\n</div>","autoDesc":true}');export{t as data};
