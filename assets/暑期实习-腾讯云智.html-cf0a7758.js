const e=JSON.parse(`{"key":"v-4155cc10","path":"/lifetalk/interview/internship/%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0-%E8%85%BE%E8%AE%AF%E4%BA%91%E6%99%BA.html","title":"暑期实习 - 腾讯云智","lang":"zh-CN","frontmatter":{"title":"暑期实习 - 腾讯云智","date":"2023-03-24T00:00:00.000Z","order":8,"icon":"write","category":["杂谈"],"tag":["面经"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"本文内容 地图、出行业务部门，后台开发岗位 一面（2023/3/24） 你对热点数据的定义是什么？ 如何定义访问得比较多呢？ 如果在一段时间内，外部业务发生变化，热点数据突然激增，可能以前做的一些策略并不能支撑业务场景，如何解决呢？ 如果你之前只有 20% 热点数据，然后现在访问增加，可能 80% 都是热点数据了，以前的架构并不足以支撑的情况下，比如说之前设计的下游只能支撑 20% 的热点数据，怎么解决？ 内存的成本是比较高的，你项目中是把很多数据都存到 Redis 吗？有考虑过持久化之类的吗？ 你项目是把分数变化的帖子先存到 Redis 里面，是相当于用队列来进行消费吗？如果消费失败，你有一个保证完整闭环的设计吗？ 如果数据本身就有问题，一直消费失败，怎么办呢？ Redis 的数据结构你有了解吗？ skiplist 你了解得多吗？ 说一下 Redis 的内存淘汰策略 如果一个 key 设置了过期时间，它是怎么取出来进行淘汰的呢？ MySQL 的慢查询你有遇到过吗？ 算法：反转链表","head":[["meta",{"property":"og:url","content":"https://aruni.me/docs/lifetalk/interview/internship/%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0-%E8%85%BE%E8%AE%AF%E4%BA%91%E6%99%BA.html"}],["meta",{"property":"og:site_name","content":"AruNi's domain"}],["meta",{"property":"og:title","content":"暑期实习 - 腾讯云智"}],["meta",{"property":"og:description","content":"本文内容 地图、出行业务部门，后台开发岗位 一面（2023/3/24） 你对热点数据的定义是什么？ 如何定义访问得比较多呢？ 如果在一段时间内，外部业务发生变化，热点数据突然激增，可能以前做的一些策略并不能支撑业务场景，如何解决呢？ 如果你之前只有 20% 热点数据，然后现在访问增加，可能 80% 都是热点数据了，以前的架构并不足以支撑的情况下，比如说之前设计的下游只能支撑 20% 的热点数据，怎么解决？ 内存的成本是比较高的，你项目中是把很多数据都存到 Redis 吗？有考虑过持久化之类的吗？ 你项目是把分数变化的帖子先存到 Redis 里面，是相当于用队列来进行消费吗？如果消费失败，你有一个保证完整闭环的设计吗？ 如果数据本身就有问题，一直消费失败，怎么办呢？ Redis 的数据结构你有了解吗？ skiplist 你了解得多吗？ 说一下 Redis 的内存淘汰策略 如果一个 key 设置了过期时间，它是怎么取出来进行淘汰的呢？ MySQL 的慢查询你有遇到过吗？ 算法：反转链表"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-10T13:25:13.000Z"}],["meta",{"property":"article:author","content":"AruNi_Lu"}],["meta",{"property":"article:tag","content":"面经"}],["meta",{"property":"article:published_time","content":"2023-03-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-10T13:25:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"暑期实习 - 腾讯云智\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-10T13:25:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AruNi_Lu\\",\\"url\\":\\"https://github.com/AruNi-01\\"}]}"]]},"headers":[{"level":2,"title":"一面（2023/3/24）","slug":"一面-2023-3-24","link":"#一面-2023-3-24","children":[]},{"level":2,"title":"二面（2023/3/31）","slug":"二面-2023-3-31","link":"#二面-2023-3-31","children":[{"level":3,"title":"项目","slug":"项目","link":"#项目","children":[]},{"level":3,"title":"网络","slug":"网络","link":"#网络","children":[]},{"level":3,"title":"MySQL & Redis","slug":"mysql-redis","link":"#mysql-redis","children":[]},{"level":3,"title":"其他","slug":"其他","link":"#其他","children":[]}]},{"level":2,"title":"HR 面（2023/4/3）","slug":"hr-面-2023-4-3","link":"#hr-面-2023-4-3","children":[]}],"git":{"createdTime":1679812756000,"updatedTime":1686403513000,"contributors":[{"name":"AruNi-01","email":"1298911600@qq.com","commits":5},{"name":"aarynlu","email":"aarynlu@tencent.com","commits":1}]},"readingTime":{"minutes":2.99,"words":896},"filePathRelative":"lifetalk/interview/internship/暑期实习-腾讯云智.md","localizedDate":"2023年3月24日","excerpt":"<details class=\\"hint-container details\\"><summary>本文内容</summary>\\n\\n</details>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">地图、出行业务部门，后台开发岗位</p>\\n</div>\\n<h2> 一面（2023/3/24）</h2>\\n<ul>\\n<li>你对热点数据的定义是什么？</li>\\n<li>如何定义访问得比较多呢？</li>\\n<li>如果在一段时间内，外部业务发生变化，热点数据突然激增，可能以前做的一些策略并不能支撑业务场景，如何解决呢？</li>\\n<li>如果你之前只有 20% 热点数据，然后现在访问增加，可能 80% 都是热点数据了，以前的架构并不足以支撑的情况下，比如说之前设计的下游只能支撑 20% 的热点数据，怎么解决？</li>\\n<li>内存的成本是比较高的，你项目中是把很多数据都存到 Redis 吗？有考虑过持久化之类的吗？</li>\\n<li>你项目是把分数变化的帖子先存到 Redis 里面，是相当于用队列来进行消费吗？如果消费失败，你有一个保证完整闭环的设计吗？</li>\\n<li>如果数据本身就有问题，一直消费失败，怎么办呢？</li>\\n<li>Redis 的数据结构你有了解吗？</li>\\n<li>skiplist 你了解得多吗？</li>\\n<li>说一下 Redis 的内存淘汰策略</li>\\n<li>如果一个 key 设置了过期时间，它是怎么取出来进行淘汰的呢？</li>\\n<li>MySQL 的慢查询你有遇到过吗？</li>\\n<li>算法：反转链表</li>\\n</ul>","autoDesc":true}`);export{e as data};
